
******  DataFlow Result for function factor  ******
{ arg }
bb:
  %tmp3 = icmp eq i32 %arg, 0
  br i1 %tmp3, label %bb4, label %bb5
{  tmp3 arg }
---
{  tmp3 arg }
bb4:                                              ; preds = %bb
  br label %bb11
{   tmp3 arg }
---
{  tmp3 arg }
bb5:                                              ; preds = %bb
  %tmp8 = sub nsw i32 %arg, 1
  %tmp9 = call i32 @factor(i32 %tmp8)
  %tmp10 = mul nsw i32 %arg, %tmp9
  br label %bb11
{  tmp10 tmp9 tmp8  tmp3 arg }
---
{  tmp10 tmp9 tmp8  tmp3 arg  }
bb11:                                             ; preds = %bb5, %bb4
  %tmp.0 = phi i32 [ 1, %bb4 ], [ %tmp10, %bb5 ]
  ret i32 %tmp.0
{  tmp.0  tmp10 tmp9 tmp8  tmp3 arg  }
---

******  DataFlow Result for function recursive1  ******
{ arg }
bb:
  %tmp3 = srem i32 %arg, 2
  %tmp4 = icmp eq i32 %tmp3, 0
  br i1 %tmp4, label %bb5, label %bb8
{  tmp4 tmp3 arg }
---
{  tmp4 tmp3 arg }
bb5:                                              ; preds = %bb
  %tmp7 = call i32 @recursive2(i32 %arg)
  br label %bb14
{  tmp7  tmp4 tmp3 arg }
---
{  tmp4 tmp3 arg }
bb8:                                              ; preds = %bb
  %tmp11 = sub nsw i32 %arg, 1
  %tmp12 = call i32 @recursive2(i32 %tmp11)
  %tmp13 = add nsw i32 %arg, %tmp12
  br label %bb14
{  tmp13 tmp12 tmp11  tmp4 tmp3 arg }
---
{  tmp13 tmp12 tmp11  tmp4 tmp3 arg  tmp7 }
bb14:                                             ; preds = %bb8, %bb5
  %tmp.0 = phi i32 [ %tmp7, %bb5 ], [ %tmp13, %bb8 ]
  ret i32 %tmp.0
{  tmp.0  tmp13 tmp12 tmp11  tmp4 tmp3 arg  tmp7 }
---

******  DataFlow Result for function recursive2  ******
{ arg }
bb:
  %tmp3 = srem i32 %arg, 2
  %tmp4 = icmp ne i32 %tmp3, 0
  br i1 %tmp4, label %bb5, label %bb8
{  tmp4 tmp3 arg }
---
{  tmp4 tmp3 arg }
bb5:                                              ; preds = %bb
  %tmp7 = call i32 @recursive1(i32 %arg)
  br label %bb14
{  tmp7  tmp4 tmp3 arg }
---
{  tmp4 tmp3 arg }
bb8:                                              ; preds = %bb
  %tmp11 = sub nsw i32 %arg, 1
  %tmp12 = call i32 @recursive1(i32 %tmp11)
  %tmp13 = add nsw i32 %arg, %tmp12
  br label %bb14
{  tmp13 tmp12 tmp11  tmp4 tmp3 arg }
---
{  tmp13 tmp12 tmp11  tmp4 tmp3 arg  tmp7 }
bb14:                                             ; preds = %bb8, %bb5
  %tmp.0 = phi i32 [ %tmp7, %bb5 ], [ %tmp13, %bb8 ]
  ret i32 %tmp.0
{  tmp.0  tmp13 tmp12 tmp11  tmp4 tmp3 arg  tmp7 }
---

******  DataFlow Result for function start  ******
{ arg arg1 arg2 }
bb:
  %tmp8 = call i32 %arg(i32 %arg1, i32 %arg2)
  ret i32 %tmp8
{  tmp8 arg arg1 arg2 }
---

******  DataFlow Result for function add  ******
{ arg arg1 }
bb:
  %tmp5 = add nsw i32 %arg, %arg1
  ret i32 %tmp5
{  tmp5 arg arg1 }
---

******  DataFlow Result for function sub  ******
{ arg arg1 }
bb:
  %tmp5 = sub nsw i32 %arg, %arg1
  ret i32 %tmp5
{  tmp5 arg arg1 }
---

******  DataFlow Result for function main  ******
{ }
bb:
  %tmp2 = call i32 @factor(i32 10)
  %tmp3 = call i32 @recursive1(i32 15)
  %tmp5 = call i32 @start(i32 (i32, i32)* @add, i32 1, i32 2)
  ret i32 0
{  tmp5 tmp3 tmp2 }
---
